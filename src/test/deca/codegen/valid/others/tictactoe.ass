	TSTO #1024
; start main program
	BOV pile_pleine
; Main program
	LOAD #0, R2
	STORE R2, 3(GB)
	LOAD #0, R2
	STORE R2, 4(GB)
	LOAD #0, R2
	STORE R2, 5(GB)
	LOAD #0, R2
	STORE R2, 6(GB)
	LOAD #0, R2
	STORE R2, 7(GB)
	LOAD #0, R2
	STORE R2, 8(GB)
	LOAD #0, R2
	STORE R2, 9(GB)
	LOAD #0, R2
	STORE R2, 10(GB)
	LOAD #0, R2
	STORE R2, 11(GB)
	LOAD #1, R2
	STORE R2, 12(GB)
	LOAD #0, R2
	STORE R2, 13(GB)
	LOAD #0, R2
	STORE R2, 14(GB)
; Beginning of main instructions:
while1:
	LOAD 13(GB), R0
	CMP #0, R0
	BEQ not_is_true0
	LOAD #0, R0
	BRA not_end_case0
not_is_true0:
	LOAD #1, R0
not_end_case0:
	LOAD R0, R2
	LOAD #9, R3
	LOAD 14(GB), R0
	CMP R3, R0
	BLT not_lower0
	LOAD #1, R0
	BRA lower_0
not_lower0:
	LOAD #0, R0
lower_0:
	LOAD R0, R3
	LOAD R3, R0
	CMP #0, R0
	BEQ and_false_case0
	CMP #0, R2
	BEQ and_false_case0
	BRA and_end_case0
and_false_case0:
	LOAD #0, R2
and_end_case0:
	CMP #1, R2
	BNE whileExit1
	WSTR "Tour n"
	LOAD 14(GB), R1
	WINT
	WSTR " | C'est au joueur "
	LOAD 12(GB), R1
	WINT
	WSTR " de jouer : "
	WNL
	WSTR "+---+---+---+"
	WNL
	WSTR "| "
	LOAD 3(GB), R1
	WINT
	WSTR " | "
	LOAD 4(GB), R1
	WINT
	WSTR " | "
	LOAD 5(GB), R1
	WINT
	WSTR " |"
	WNL
	WSTR "+---+---+---+"
	WNL
	WSTR "| "
	LOAD 6(GB), R1
	WINT
	WSTR " | "
	LOAD 7(GB), R1
	WINT
	WSTR " | "
	LOAD 8(GB), R1
	WINT
	WSTR " |"
	WNL
	WSTR "+---+---+---+"
	WNL
	WSTR "| "
	LOAD 9(GB), R1
	WINT
	WSTR " | "
	LOAD 10(GB), R1
	WINT
	WSTR " | "
	LOAD 11(GB), R1
	WINT
	WSTR " |"
	WNL
	WSTR "+---+---+---+"
	WNL
	WSTR "Choix du joueur "
	LOAD 12(GB), R1
	WINT
	WSTR " (1 Ã  9) : "
	WNL
	RINT
	LOAD R1, R3
	STORE R3, 15(GB)
	LOAD #1, R4
	LOAD 15(GB), R0
	CMP R4, R0
	BNE not_equal0
	LOAD #1, R0
	BRA equal_0
not_equal0:
	LOAD #0, R0
equal_0:
	LOAD R0, R4
	LOAD #0, R5
	LOAD 3(GB), R0
	CMP R5, R0
	BNE not_equal1
	LOAD #1, R0
	BRA equal_1
not_equal1:
	LOAD #0, R0
equal_1:
	LOAD R0, R5
	LOAD R5, R0
	CMP #0, R0
	BEQ and_false_case1
	CMP #0, R4
	BEQ and_false_case1
	BRA and_end_case1
and_false_case1:
	LOAD #0, R4
and_end_case1:
	CMP #1, R4
	BNE elseStart0
	LOAD 12(GB), R1
	STORE R1, 3(GB)
	LOAD R1, R5
	BRA ifThenElseExit0
elseStart0:
	LOAD #2, R6
	LOAD 15(GB), R0
	CMP R6, R0
	BNE not_equal2
	LOAD #1, R0
	BRA equal_2
not_equal2:
	LOAD #0, R0
equal_2:
	LOAD R0, R6
	LOAD #0, R7
	LOAD 4(GB), R0
	CMP R7, R0
	BNE not_equal3
	LOAD #1, R0
	BRA equal_3
not_equal3:
	LOAD #0, R0
equal_3:
	LOAD R0, R7
	LOAD R7, R0
	CMP #0, R0
	BEQ and_false_case2
	CMP #0, R6
	BEQ and_false_case2
	BRA and_end_case2
and_false_case2:
	LOAD #0, R6
and_end_case2:
	CMP #1, R6
	BNE elseStart1
	LOAD 12(GB), R1
	STORE R1, 4(GB)
	LOAD R1, R7
	BRA ifThenElseExit1
elseStart1:
	LOAD #3, R8
	LOAD 15(GB), R0
	CMP R8, R0
	BNE not_equal4
	LOAD #1, R0
	BRA equal_4
not_equal4:
	LOAD #0, R0
equal_4:
	LOAD R0, R8
	LOAD #0, R9
	LOAD 5(GB), R0
	CMP R9, R0
	BNE not_equal5
	LOAD #1, R0
	BRA equal_5
not_equal5:
	LOAD #0, R0
equal_5:
	LOAD R0, R9
	LOAD R9, R0
	CMP #0, R0
	BEQ and_false_case3
	CMP #0, R8
	BEQ and_false_case3
	BRA and_end_case3
and_false_case3:
	LOAD #0, R8
and_end_case3:
	CMP #1, R8
	BNE elseStart2
	LOAD 12(GB), R1
	STORE R1, 5(GB)
	LOAD R1, R9
	BRA ifThenElseExit2
elseStart2:
	LOAD #4, R10
	LOAD 15(GB), R0
	CMP R10, R0
	BNE not_equal6
	LOAD #1, R0
	BRA equal_6
not_equal6:
	LOAD #0, R0
equal_6:
	LOAD R0, R10
	LOAD #0, R11
	LOAD 6(GB), R0
	CMP R11, R0
	BNE not_equal7
	LOAD #1, R0
	BRA equal_7
not_equal7:
	LOAD #0, R0
equal_7:
	LOAD R0, R11
	LOAD R11, R0
	CMP #0, R0
	BEQ and_false_case4
	CMP #0, R10
	BEQ and_false_case4
	BRA and_end_case4
and_false_case4:
	LOAD #0, R10
and_end_case4:
	CMP #1, R10
	BNE elseStart3
	LOAD 12(GB), R1
	STORE R1, 6(GB)
	LOAD R1, R11
	BRA ifThenElseExit3
elseStart3:
	LOAD #5, R12
	LOAD 15(GB), R0
	CMP R12, R0
	BNE not_equal8
	LOAD #1, R0
	BRA equal_8
not_equal8:
	LOAD #0, R0
equal_8:
	LOAD R0, R12
	LOAD #0, R13
	LOAD 7(GB), R0
	CMP R13, R0
	BNE not_equal9
	LOAD #1, R0
	BRA equal_9
not_equal9:
	LOAD #0, R0
equal_9:
	LOAD R0, R13
	LOAD R13, R0
	CMP #0, R0
	BEQ and_false_case5
	CMP #0, R12
	BEQ and_false_case5
	BRA and_end_case5
and_false_case5:
	LOAD #0, R12
and_end_case5:
	CMP #1, R12
	BNE elseStart4
	LOAD 12(GB), R1
	STORE R1, 7(GB)
	LOAD R1, R13
	BRA ifThenElseExit4
elseStart4:
	LOAD #6, R14
	LOAD 15(GB), R0
	CMP R14, R0
	BNE not_equal10
	LOAD #1, R0
	BRA equal_10
not_equal10:
	LOAD #0, R0
equal_10:
	LOAD R0, R14
	LOAD #0, R15
	LOAD 8(GB), R0
	CMP R15, R0
	BNE not_equal11
	LOAD #1, R0
	BRA equal_11
not_equal11:
	LOAD #0, R0
equal_11:
	LOAD R0, R15
	LOAD R15, R0
	CMP #0, R0
	BEQ and_false_case6
	CMP #0, R14
	BEQ and_false_case6
	BRA and_end_case6
and_false_case6:
	LOAD #0, R14
and_end_case6:
	CMP #1, R14
	BNE elseStart5
	LOAD 12(GB), R1
	STORE R1, 8(GB)
	LOAD R1, R15
	BRA ifThenElseExit5
elseStart5:
	LOAD #7, R0
	PUSH R0
	POP R1
	LOAD 15(GB), R0
	CMP R1, R0
	BNE not_equal12
	LOAD #1, R0
	BRA equal_12
not_equal12:
	LOAD #0, R0
equal_12:
	PUSH R0
	LOAD #0, R0
	PUSH R0
	POP R1
	LOAD 9(GB), R0
	CMP R1, R0
	BNE not_equal13
	LOAD #1, R0
	BRA equal_13
not_equal13:
	LOAD #0, R0
equal_13:
	PUSH R0
	POP R1
	POP R0
	LOAD R1, R0
	CMP #0, R0
	BEQ and_false_case7
	CMP #0, R0
	BEQ and_false_case7
	BRA and_end_case7
and_false_case7:
	LOAD #0, R0
and_end_case7:
	PUSH R0
	POP R0
	CMP #1, R0
	BNE elseStart6
	LOAD 12(GB), R1
	STORE R1, 9(GB)
	PUSH R1
	BRA ifThenElseExit6
elseStart6:
	LOAD #8, R0
	PUSH R0
	POP R1
	LOAD 15(GB), R0
	CMP R1, R0
	BNE not_equal14
	LOAD #1, R0
	BRA equal_14
not_equal14:
	LOAD #0, R0
equal_14:
	PUSH R0
	LOAD #0, R0
	PUSH R0
	POP R1
	LOAD 10(GB), R0
	CMP R1, R0
	BNE not_equal15
	LOAD #1, R0
	BRA equal_15
not_equal15:
	LOAD #0, R0
equal_15:
	PUSH R0
	POP R1
	POP R0
	LOAD R1, R0
	CMP #0, R0
	BEQ and_false_case8
	CMP #0, R0
	BEQ and_false_case8
	BRA and_end_case8
and_false_case8:
	LOAD #0, R0
and_end_case8:
	PUSH R0
	POP R0
	CMP #1, R0
	BNE elseStart7
	LOAD 12(GB), R1
	STORE R1, 10(GB)
	PUSH R1
	BRA ifThenElseExit7
elseStart7:
	LOAD #9, R0
	PUSH R0
	POP R1
	LOAD 15(GB), R0
	CMP R1, R0
	BNE not_equal16
	LOAD #1, R0
	BRA equal_16
not_equal16:
	LOAD #0, R0
equal_16:
	PUSH R0
	LOAD #0, R0
	PUSH R0
	POP R1
	LOAD 11(GB), R0
	CMP R1, R0
	BNE not_equal17
	LOAD #1, R0
	BRA equal_17
not_equal17:
	LOAD #0, R0
equal_17:
	PUSH R0
	POP R1
	POP R0
	LOAD R1, R0
	CMP #0, R0
	BEQ and_false_case9
	CMP #0, R0
	BEQ and_false_case9
	BRA and_end_case9
and_false_case9:
	LOAD #0, R0
and_end_case9:
	PUSH R0
	POP R0
	CMP #1, R0
	BNE elseStart8
	LOAD 12(GB), R1
	STORE R1, 11(GB)
	PUSH R1
	BRA ifThenElseExit8
elseStart8:
	WSTR "Choix invalide : tu passes ton tour."
	WNL
ifThenElseExit8:
ifThenElseExit7:
ifThenElseExit6:
ifThenElseExit5:
ifThenElseExit4:
ifThenElseExit3:
ifThenElseExit2:
ifThenElseExit1:
ifThenElseExit0:
	LOAD 3(GB), R0
	CMP 12(GB), R0
	BNE not_equal18
	LOAD #1, R0
	BRA equal_18
not_equal18:
	LOAD #0, R0
equal_18:
	LOAD R0, R4
	LOAD 4(GB), R0
	CMP 12(GB), R0
	BNE not_equal19
	LOAD #1, R0
	BRA equal_19
not_equal19:
	LOAD #0, R0
equal_19:
	LOAD R0, R6
	LOAD R6, R0
	CMP #0, R0
	BEQ and_false_case10
	CMP #0, R4
	BEQ and_false_case10
	BRA and_end_case10
and_false_case10:
	LOAD #0, R4
and_end_case10:
	LOAD 5(GB), R0
	CMP 12(GB), R0
	BNE not_equal20
	LOAD #1, R0
	BRA equal_20
not_equal20:
	LOAD #0, R0
equal_20:
	LOAD R0, R6
	LOAD R6, R0
	CMP #0, R0
	BEQ and_false_case11
	CMP #0, R4
	BEQ and_false_case11
	BRA and_end_case11
and_false_case11:
	LOAD #0, R4
and_end_case11:
	LOAD 6(GB), R0
	CMP 12(GB), R0
	BNE not_equal21
	LOAD #1, R0
	BRA equal_21
not_equal21:
	LOAD #0, R0
equal_21:
	LOAD R0, R6
	LOAD 7(GB), R0
	CMP 12(GB), R0
	BNE not_equal22
	LOAD #1, R0
	BRA equal_22
not_equal22:
	LOAD #0, R0
equal_22:
	LOAD R0, R8
	LOAD R8, R0
	CMP #0, R0
	BEQ and_false_case12
	CMP #0, R6
	BEQ and_false_case12
	BRA and_end_case12
and_false_case12:
	LOAD #0, R6
and_end_case12:
	LOAD 8(GB), R0
	CMP 12(GB), R0
	BNE not_equal23
	LOAD #1, R0
	BRA equal_23
not_equal23:
	LOAD #0, R0
equal_23:
	LOAD R0, R8
	LOAD R8, R0
	CMP #0, R0
	BEQ and_false_case13
	CMP #0, R6
	BEQ and_false_case13
	BRA and_end_case13
and_false_case13:
	LOAD #0, R6
and_end_case13:
	LOAD R6, R0
	CMP #0, R0
	BNE or_true_case0
	CMP #0, R4
	BNE or_true_case0
	BRA or_end_case0
or_true_case0:
	LOAD #1, R4
or_end_case0:
	LOAD 9(GB), R0
	CMP 12(GB), R0
	BNE not_equal24
	LOAD #1, R0
	BRA equal_24
not_equal24:
	LOAD #0, R0
equal_24:
	LOAD R0, R6
	LOAD 10(GB), R0
	CMP 12(GB), R0
	BNE not_equal25
	LOAD #1, R0
	BRA equal_25
not_equal25:
	LOAD #0, R0
equal_25:
	LOAD R0, R8
	LOAD R8, R0
	CMP #0, R0
	BEQ and_false_case14
	CMP #0, R6
	BEQ and_false_case14
	BRA and_end_case14
and_false_case14:
	LOAD #0, R6
and_end_case14:
	LOAD 11(GB), R0
	CMP 12(GB), R0
	BNE not_equal26
	LOAD #1, R0
	BRA equal_26
not_equal26:
	LOAD #0, R0
equal_26:
	LOAD R0, R8
	LOAD R8, R0
	CMP #0, R0
	BEQ and_false_case15
	CMP #0, R6
	BEQ and_false_case15
	BRA and_end_case15
and_false_case15:
	LOAD #0, R6
and_end_case15:
	LOAD R6, R0
	CMP #0, R0
	BNE or_true_case1
	CMP #0, R4
	BNE or_true_case1
	BRA or_end_case1
or_true_case1:
	LOAD #1, R4
or_end_case1:
	LOAD 3(GB), R0
	CMP 12(GB), R0
	BNE not_equal27
	LOAD #1, R0
	BRA equal_27
not_equal27:
	LOAD #0, R0
equal_27:
	LOAD R0, R6
	LOAD 6(GB), R0
	CMP 12(GB), R0
	BNE not_equal28
	LOAD #1, R0
	BRA equal_28
not_equal28:
	LOAD #0, R0
equal_28:
	LOAD R0, R8
	LOAD R8, R0
	CMP #0, R0
	BEQ and_false_case16
	CMP #0, R6
	BEQ and_false_case16
	BRA and_end_case16
and_false_case16:
	LOAD #0, R6
and_end_case16:
	LOAD 9(GB), R0
	CMP 12(GB), R0
	BNE not_equal29
	LOAD #1, R0
	BRA equal_29
not_equal29:
	LOAD #0, R0
equal_29:
	LOAD R0, R8
	LOAD R8, R0
	CMP #0, R0
	BEQ and_false_case17
	CMP #0, R6
	BEQ and_false_case17
	BRA and_end_case17
and_false_case17:
	LOAD #0, R6
and_end_case17:
	LOAD R6, R0
	CMP #0, R0
	BNE or_true_case2
	CMP #0, R4
	BNE or_true_case2
	BRA or_end_case2
or_true_case2:
	LOAD #1, R4
or_end_case2:
	LOAD 4(GB), R0
	CMP 12(GB), R0
	BNE not_equal30
	LOAD #1, R0
	BRA equal_30
not_equal30:
	LOAD #0, R0
equal_30:
	LOAD R0, R6
	LOAD 7(GB), R0
	CMP 12(GB), R0
	BNE not_equal31
	LOAD #1, R0
	BRA equal_31
not_equal31:
	LOAD #0, R0
equal_31:
	LOAD R0, R8
	LOAD R8, R0
	CMP #0, R0
	BEQ and_false_case18
	CMP #0, R6
	BEQ and_false_case18
	BRA and_end_case18
and_false_case18:
	LOAD #0, R6
and_end_case18:
	LOAD 10(GB), R0
	CMP 12(GB), R0
	BNE not_equal32
	LOAD #1, R0
	BRA equal_32
not_equal32:
	LOAD #0, R0
equal_32:
	LOAD R0, R8
	LOAD R8, R0
	CMP #0, R0
	BEQ and_false_case19
	CMP #0, R6
	BEQ and_false_case19
	BRA and_end_case19
and_false_case19:
	LOAD #0, R6
and_end_case19:
	LOAD R6, R0
	CMP #0, R0
	BNE or_true_case3
	CMP #0, R4
	BNE or_true_case3
	BRA or_end_case3
or_true_case3:
	LOAD #1, R4
or_end_case3:
	LOAD 5(GB), R0
	CMP 12(GB), R0
	BNE not_equal33
	LOAD #1, R0
	BRA equal_33
not_equal33:
	LOAD #0, R0
equal_33:
	LOAD R0, R6
	LOAD 8(GB), R0
	CMP 12(GB), R0
	BNE not_equal34
	LOAD #1, R0
	BRA equal_34
not_equal34:
	LOAD #0, R0
equal_34:
	LOAD R0, R8
	LOAD R8, R0
	CMP #0, R0
	BEQ and_false_case20
	CMP #0, R6
	BEQ and_false_case20
	BRA and_end_case20
and_false_case20:
	LOAD #0, R6
and_end_case20:
	LOAD 11(GB), R0
	CMP 12(GB), R0
	BNE not_equal35
	LOAD #1, R0
	BRA equal_35
not_equal35:
	LOAD #0, R0
equal_35:
	LOAD R0, R8
	LOAD R8, R0
	CMP #0, R0
	BEQ and_false_case21
	CMP #0, R6
	BEQ and_false_case21
	BRA and_end_case21
and_false_case21:
	LOAD #0, R6
and_end_case21:
	LOAD R6, R0
	CMP #0, R0
	BNE or_true_case4
	CMP #0, R4
	BNE or_true_case4
	BRA or_end_case4
or_true_case4:
	LOAD #1, R4
or_end_case4:
	LOAD 3(GB), R0
	CMP 12(GB), R0
	BNE not_equal36
	LOAD #1, R0
	BRA equal_36
not_equal36:
	LOAD #0, R0
equal_36:
	LOAD R0, R6
	LOAD 7(GB), R0
	CMP 12(GB), R0
	BNE not_equal37
	LOAD #1, R0
	BRA equal_37
not_equal37:
	LOAD #0, R0
equal_37:
	LOAD R0, R8
	LOAD R8, R0
	CMP #0, R0
	BEQ and_false_case22
	CMP #0, R6
	BEQ and_false_case22
	BRA and_end_case22
and_false_case22:
	LOAD #0, R6
and_end_case22:
	LOAD 11(GB), R0
	CMP 12(GB), R0
	BNE not_equal38
	LOAD #1, R0
	BRA equal_38
not_equal38:
	LOAD #0, R0
equal_38:
	LOAD R0, R8
	LOAD R8, R0
	CMP #0, R0
	BEQ and_false_case23
	CMP #0, R6
	BEQ and_false_case23
	BRA and_end_case23
and_false_case23:
	LOAD #0, R6
and_end_case23:
	LOAD R6, R0
	CMP #0, R0
	BNE or_true_case5
	CMP #0, R4
	BNE or_true_case5
	BRA or_end_case5
or_true_case5:
	LOAD #1, R4
or_end_case5:
	LOAD 5(GB), R0
	CMP 12(GB), R0
	BNE not_equal39
	LOAD #1, R0
	BRA equal_39
not_equal39:
	LOAD #0, R0
equal_39:
	LOAD R0, R6
	LOAD 7(GB), R0
	CMP 12(GB), R0
	BNE not_equal40
	LOAD #1, R0
	BRA equal_40
not_equal40:
	LOAD #0, R0
equal_40:
	LOAD R0, R8
	LOAD R8, R0
	CMP #0, R0
	BEQ and_false_case24
	CMP #0, R6
	BEQ and_false_case24
	BRA and_end_case24
and_false_case24:
	LOAD #0, R6
and_end_case24:
	LOAD 9(GB), R0
	CMP 12(GB), R0
	BNE not_equal41
	LOAD #1, R0
	BRA equal_41
not_equal41:
	LOAD #0, R0
equal_41:
	LOAD R0, R8
	LOAD R8, R0
	CMP #0, R0
	BEQ and_false_case25
	CMP #0, R6
	BEQ and_false_case25
	BRA and_end_case25
and_false_case25:
	LOAD #0, R6
and_end_case25:
	LOAD R6, R0
	CMP #0, R0
	BNE or_true_case6
	CMP #0, R4
	BNE or_true_case6
	BRA or_end_case6
or_true_case6:
	LOAD #1, R4
or_end_case6:
	CMP #1, R4
	BNE elseStart9
	LOAD #1, R6
	STORE R6, 13(GB)
	WSTR "Joueur "
	LOAD 12(GB), R1
	WINT
	WSTR " Ã  gagner !"
	WNL
	BRA ifThenElseExit9
elseStart9:
ifThenElseExit9:
	LOAD #3, R4
	SUB 12(GB), R4
	STORE R4, 12(GB)
	LOAD #1, R8
	LOAD 14(GB), R0
	ADD R8, R0
	LOAD R0, R8
	STORE R8, 14(GB)
	BRA while1
whileExit1:
	LOAD 13(GB), R0
	CMP #0, R0
	BEQ not_is_true1
	LOAD #0, R0
	BRA not_end_case1
not_is_true1:
	LOAD #1, R0
not_end_case1:
	LOAD R0, R2
	CMP #1, R2
	BNE elseStart10
	WSTR "Match nul !"
	WNL
	BRA ifThenElseExit10
elseStart10:
ifThenElseExit10:
	WSTR "+---+---+---+"
	WNL
	WSTR "| "
	LOAD 3(GB), R1
	WINT
	WSTR " | "
	LOAD 4(GB), R1
	WINT
	WSTR " | "
	LOAD 5(GB), R1
	WINT
	WSTR " |"
	WNL
	WSTR "+---+---+---+"
	WNL
	WSTR "| "
	LOAD 6(GB), R1
	WINT
	WSTR " | "
	LOAD 7(GB), R1
	WINT
	WSTR " | "
	LOAD 8(GB), R1
	WINT
	WSTR " |"
	WNL
	WSTR "+---+---+---+"
	WNL
	WSTR "| "
	LOAD 9(GB), R1
	WINT
	WSTR " | "
	LOAD 10(GB), R1
	WINT
	WSTR " | "
	LOAD 11(GB), R1
	WINT
	WSTR " |"
	WNL
	WSTR "+---+---+---+"
	WNL
	HALT
; Erreur : dÃ©passement de pile
pile_pleine:
	WSTR "Erreur : dÃ©passement de la taille de pile autorisÃ©e"
	WNL
	ERROR
; end main program
